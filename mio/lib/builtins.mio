utils = FFI clone("utils", """
def tobin(x):
    return bin(int(x))

def tobool(x):
    return bool(x)

def tochr(x):
    return chr(int(x))
""")

abs = block(x,
    Number clone setValue(x :__abs__)
)

all = block(xs,
    xs foreach(x,
        (x bool) ifFalse(return False)
    )
    True
)

any = block(xs,
    xs foreach(x,
        (x bool) ifTrue(return True)
    )
    False
)

bin = block(x, utils tobin(x))

bool = block(x, utils tobool(x))

callable = block(x,
    (x has("__call__")) ifTrue(
        return True
    ) ifFalse(
        return (x type == "Block")
    )
)

chr = block(x, utils tochr(x))

from = get("import")

import = block(
    name = call message args at(0) name
    Importer import(name)
)

map = block(f, xs,
    rs = List clone
    xs foreach(x,
        rs append(f(x))
    )
    rs
)

filter = block(f, xs,
    rs = List clone
    xs foreach(x,
        (f is None) ifTrue(
            not x is None ifTrue(
                rs append(x)
            )
        ) ifFalse(
            f(x) ifTrue(
                rs append(x)
            )
        )
    )
    rs
)

print = block(*args, sep=" ", end="\n", file=System stdout,
    file write(sep join(args))
    file write(end)
    file flush
    None
)
