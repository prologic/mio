#!/usr/bin/env ruby

$:.unshift "."
require "readline"

require "object"
require "message"
require "method"
require "bootstrap"

module Mio
  class Error < RuntimeError
    attr_accessor :current_message
    
    def message
      super + " in message `#{@current_message.to_s}` at line #{@current_message.line}"
    end
  end

  def self.eval(code)
    # Parse
    message = Message.parse(code)
    puts message
    # Eval
    message.call(Lobby)
  end
  
  def self.load(file)
    eval File.read(file)
  end
  
  load "lib/boolean.mio"
  load "lib/if.mio"
end


# If a file is given we eval it.
if file = ARGV.first
  Mio.eval File.read(file)

# Start the REPL, read-eval-print-loop, or interactive interpreter
else
  puts "MiO REPL, CTRL+C to quit"
  loop do
    line = Readline::readline(">> ")
    Readline::HISTORY.push(line)
    begin
      value = Mio.eval(line)
      puts "=> #{value.value.inspect}"
    rescue
        puts $!
    end
  end
  
end
